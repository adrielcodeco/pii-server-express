{"version":3,"sources":["../src/expressServer.ts"],"names":[],"mappings":";;;;;;;;;;AAMA,6BAA4B;AAE5B,0CAAyC;AACzC,2CAA0C;AAC1C,wCAAuC;AACvC,iCAAgC;AAChC,gCAA+B;AAC/B,gCAAmC;AACnC,qCAA6B;AAC7B,iCAAgC;AAChC,8CAA6C;AAC7C,kDAMyB;AACzB,mDAAmE;AAEnE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAElC,mBAA2B,SAAQ,oBAAyC;IAK1E,YAAa,OAA8B;QACzC,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG;gBACR,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC;gBAC/C,UAAU,EAAE,MAAM;gBAClB,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC;gBACnD,aAAa,EAAE,kCAAkC;gBACjD,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,EAAE;gBACT,YAAY,EAAE,iCAAiC;gBAC/C,YAAY,EAAE,iCAAiC;gBAC/C,cAAc,EAAE,mCAAmC;aAC5B,CAAA;SAC1B;QACD,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAA;QACvB,IAAI,CAAC,GAAG,GAAG,cAAS,CAAC,GAAG,CAAU,yBAAW,CAAC,IAAK,EAAc,CAAA;QACjE,IAAI,CAAC,OAAO,GAAG,iBAAO,EAAE,CAAA;IAC1B,CAAC;IAEM,gBAAgB;QACrB,MAAM,gBAAgB,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;YACtD,KAAK,EAAE,OAAO;YACd,gBAAgB,EAAE,IAAI;YACtB,IAAI,EAAE,KAAK;YACX,QAAQ,EAAE,IAAI;SACf,CAAC,CAAA;QACF,cAAS,CAAC,YAAY,CAAC,+BAAiB,EAAE,gBAAgB,CAAC,CAAA;IAC7D,CAAC;IAEY,OAAO;;YAIlB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;aAChD;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;aACzD;YAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE;gBACzC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM;aACxB,CAAQ,CAAC,CAAA;YACV,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAA;YACnC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA;YAC5D,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;gBAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAQ,CAAC,CAAA;aAClE;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,YAAY,KAAK,EAAE;gBACvE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBAClC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;gBACrC,CAAC,CAAC,CAAA;aACH;YACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAA;YAElC,IAAI,KAAK,CAAA;YACT,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACpD,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,YAAY,EAAE,CAAA;aAC5C;iBAAM;gBACL,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;gBAClC,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;aACxC;YACD,MAAM,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAA;YACpD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;gBACvB,KAAK,EAAE,IAAI,UAAU,CAAC;oBACpB,MAAM,EAAE,KAAK;oBACb,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;iBAClC,CAAC;gBACF,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,IAAI,eAAe,IAAI,EAAE,EAAE;gBAC9D,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;gBAC/B,MAAM,EAAE,IAAI;gBACZ,iBAAiB,EAAE,IAAI;aACxB,CAAQ,CAAC,CAAA;YAYV,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAA;YAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;QACtC,CAAC;KAAA;IAEY,IAAI;;YACf,MAAM,IAAI,CAAC,cAAc,EAAE,CAAA;YAE3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;YAG/C,IACE,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,YAAY;gBACzC,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,OAAO,EACpC;gBAEA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;aACtC;iBAAM;gBAIL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAA;aAC7B;YAeD,MAAM,IAAI,CAAC,UAAU,EAAE,CAAA;YAEvB,MAAM,MAAM,GAAG,cAAS,CAAC,GAAG,CAAgB,kCAAkB,CAAC,CAAA;YAC/D,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aAC1B;QAGH,CAAC;KAAA;IAEY,UAAU;;QAEvB,CAAC;KAAA;IAEY,KAAK;;YAChB,MAAM,IAAI,CAAC,OAAO,EAAE,CAAA;YACpB,MAAM,IAAI,CAAC,IAAI,EAAE,CAAA;YAEjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACtB,MAAM,IAAI,uBAAS,CAAC;oBAClB,OAAO,EAAE,oCAAoC;iBAC9C,CAAC,CAAA;aACH;YAED,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACpC,IAAI;oBACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE;wBAChE,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CACtC,OAAO,CAAC,GAAG,EAAE,EACb,gBAAgB,CACjB,CAAC,CAAC,IAAI,CAAA;wBACP,IAAI,CAAC,GAAG,CAAC,IAAI,CACX,GAAG,WAAW,oBACZ,CACE,CACE,IAAI,CAAC,cAAc,IAAK,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAU,CACxD,CAAC,OAAO,EAAE,IAAK,EAAU,CAC3B,CAAC,IACJ,EAAE,CACH,CAAA;wBACD,OAAO,EAAE,CAAA;oBACX,CAAC,CAAC,CAAA;iBACH;gBAAC,OAAO,GAAG,EAAE;oBACZ,MAAM,CAAC,IAAI,uBAAS,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;iBACxC;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;QACtC,CAAC;KAAA;IAEY,IAAI;;YACf,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAA;QACtD,CAAC;KAAA;IAES,YAAY,CACpB,MAAW,EACX,GAAoB,EACpB,GAAqB;QAErB,IAAI,CAAC,MAAM;YAAE,MAAM,IAAI,uBAAS,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAA;QACtE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,MAAM,IAAI,uBAAS,CAAC,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC,CAAA;SACnE;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,MAAM,IAAI,uBAAS,CAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC,CAAA;SAChE;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,MAAM,IAAI,uBAAS,CAAC,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC,CAAA;SACnE;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,MAAM,IAAI,uBAAS,CAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC,CAAA;SAChE;QACD,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE;YAC5B,MAAM,IAAI,uBAAS,CAAC;gBAClB,OAAO,EAAE,uCAAuC;aACjD,CAAC,CAAA;SACH;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;YAC/B,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;YACzB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;YAC/B,aAAa,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,gBAAgB,CAAC;YACrD,YAAY,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI;SAClE,CAAC,CAAA;IACJ,CAAC;IAEY,YAAY,CAAE,MAAsB;;YAC/C,IAAI,CAAC,MAAM;gBAAE,MAAM,IAAI,uBAAS,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAA;YAEtE,MAAM,CAAC,GAAG,CACR,CACE,GAAQ,EACR,GAAoB,EACpB,GAAqB,EACrB,IAA0B,EAC1B,EAAE;gBACF,IAAI,GAAG,CAAC,GAAG;oBAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;;oBAC5C,IAAI,CAAC,GAAG,CAAC,CAAA;YAChB,CAAC,CACF,CAAA;YAGD,MAAM,CAAC,GAAG,CACR,CACE,GAAoB,EACpB,GAAqB,EACrB,IAA0B,EAC1B,EAAE;gBACF,MAAM,GAAG,GAAQ,IAAI,KAAK,CAAC,eAAe,GAAG,CAAC,GAAG,EAAE,CAAC,CAAA;gBACpD,GAAG,CAAC,MAAM,GAAG,GAAG,CAAA;gBAChB,IAAI,CAAC,GAAG,CAAC,CAAA;YACX,CAAC,CACF,CAAA;YAID,IACE,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,YAAY;gBACzC,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,OAAO,EACpC;gBACA,MAAM,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAoB,EAAE,GAAqB,EAAE,EAAE;oBACnE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;oBACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAA;oBAC7B,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;wBAClB,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,KAAK,EAAE,GAAG;wBACV,KAAK,EAAE,OAAO;qBACf,CAAC,CAAA;gBACJ,CAAC,CAAC,CAAA;aACH;YAID,MAAM,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAoB,EAAE,GAAqB,EAAE,EAAE;gBACnE,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;oBACf,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;iBACzB;gBACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;gBACf,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;YACnB,CAAC,CAAC,CAAA;QACJ,CAAC;KAAA;IAEY,aAAa,CACxB,GAAoB,EACpB,GAAqB,EACrB,IAA0B;;YAE1B,IAAI,CAAC,GAAG;gBAAE,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAA;YACxC,IAAI,CAAC,GAAG,CAAC,MAAM;gBAAE,GAAG,CAAC,MAAM,GAAG,EAAE,CAAA;YAChC,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE;gBACtB,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAA;aACnE;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAA;YACzC,IAAI,EAAE,CAAA;QACR,CAAC;KAAA;IAEY,cAAc;;QAE3B,CAAC;KAAA;CACF;AA7RD,sCA6RC","file":"expressServer.js","sourcesContent":["/**\n * Copyright 2018-present, CODECO. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport * as path from 'path'\nimport * as http from 'http'\nimport * as bodyParser from 'body-parser'\nimport * as session from 'express-session'\nimport * as compress from 'compression'\nimport * as helmet from 'helmet'\nimport * as uuid from 'uuid/v4'\nimport { Container } from '@pii/di'\nimport express from 'express'\nimport * as morgan from 'morgan'\nimport * as cookieParser from 'cookie-parser'\nimport {\n  Server,\n  Exception,\n  ILogger,\n  LoggerToken,\n  LogTransportToken\n} from '@pii/application'\nimport { ExpressRouter, ExpressRouterToken } from './expressRouter'\nimport { ExpressServerOptions } from './expressServerOptions'\nconst winston = require('winston')\n\nexport class ExpressServer extends Server<http.Server, ExpressServerOptions> {\n  public express: express.Express\n\n  protected log: ILogger\n\n  constructor (options?: ExpressServerOptions) {\n    if (!options) {\n      options = {\n        viewDir: path.resolve(process.cwd(), './views'),\n        viewEngine: 'jade',\n        publicDirs: path.resolve(process.cwd(), './public'),\n        cookie_secret: 'pii-express-server-cookie-secret',\n        useFakeRedis: true,\n        redis: {},\n        redis_prefix: 'pii-express-server-redis-prefix',\n        session_name: 'pii-express-server-session-name',\n        session_secret: 'pii-express-server-session-secret'\n      } as ExpressServerOptions\n    }\n    super(options)\n    this.getLogTransports()\n    this.log = Container.get<ILogger>(LoggerToken) || ({} as ILogger)\n    this.express = express()\n  }\n\n  public getLogTransports () {\n    const consoleTransport = new winston.transports.Console({\n      level: 'debug',\n      handleExceptions: true,\n      json: false,\n      colorize: true\n    })\n    Container.addSingleton(LogTransportToken, consoleTransport)\n  }\n\n  public async prepare (): Promise<void> {\n    // i18next\n    //   .use(middleware.LanguageDetector)\n    //   .init(require('#config/i18n'))\n    if (this.options.viewDir) {\n      this.express.set('views', this.options.viewDir)\n    }\n    if (this.options.viewEngine) {\n      this.express.set('view engine', this.options.viewEngine)\n    }\n    // this.server.use(favicon(path.resolve(this.options.publicDir, './img/favicon.ico')))\n    this.express.use(morgan(this.logFormatter, {\n      stream: this.log.stream\n    }) as any)\n    this.express.use(bodyParser.json())\n    this.express.use(bodyParser.urlencoded({ extended: false }))\n    if (this.options.cookie_secret) {\n      this.express.use(cookieParser(this.options.cookie_secret) as any)\n    }\n    if (this.options.publicDirs && this.options.publicDirs instanceof Array) {\n      this.options.publicDirs.forEach(p => {\n        this.express.use(express.static(p))\n      })\n    }\n    this.express.set('trust proxy', 1)\n\n    let redis\n    if (this.options.useFakeRedis || !this.options.redis) {\n      redis = require('fakeredis').createClient()\n    } else {\n      const ioRedis = require('ioredis')\n      redis = new ioRedis(this.options.redis)\n    }\n    const RedisStore = require('connect-redis')(session)\n    this.express.use(session({\n      store: new RedisStore({\n        client: redis,\n        prefix: this.options.redis_prefix\n      }),\n      secret: this.options.session_secret || `magma-secret${uuid()}`,\n      name: this.options.session_name,\n      resave: true,\n      saveUninitialized: true\n    }) as any)\n\n    // this.server.use(middleware.handle(i18next, {\n    //   ignoreRoutes: [\"/foo\"],\n    //   removeLngFromUrl: false\n    // }))\n\n    // Use helmet to secure Express headers\n    // this.server.use(helmet.xframe())\n    // this.server.use(helmet.xssFilter())\n    // this.server.use(helmet.nosniff())\n    // this.server.use(helmet.ienoopen())\n    this.express.use(helmet())\n    this.express.disable('x-powered-by')\n  }\n\n  public async init (): Promise<void> {\n    await this.authentication()\n\n    this.express.use(this.initialLocals.bind(this))\n\n    // Environment dependent middleware\n    if (\n      this.options.environment !== 'production' &&\n      this.options.environment !== 'stage'\n    ) {\n      // Disable views cache\n      this.express.set('view cache', false)\n    } else {\n      // this.server.locals.cache = 'memory'\n\n      // Should be placed before express.static\n      this.express.use(compress())\n    }\n\n    // let RateLimit = require('express-rate-limit')\n\n    // let siteLimiter = new RateLimit({\n    //     windowMs: 15 * 60 * 1000, // 15 minutes\n    //     max: 100,\n    //     delayMs: 0 // disabled\n    // })\n\n    // this.server.use(siteLimiter)\n\n    // routingUseContainer(Container)\n    // ormUseContainer(Container)\n\n    await this.loadRoutes()\n\n    const router = Container.get<ExpressRouter>(ExpressRouterToken)\n    if (router) {\n      router.init(this.express)\n    }\n\n    // await this.errorHandler(this.server)\n  }\n\n  public async loadRoutes (): Promise<void> {\n    // does nothing\n  }\n\n  public async start (): Promise<void> {\n    await this.prepare()\n    await this.init()\n\n    if (!this.options.port) {\n      throw new Exception({\n        message: 'server.options.port cannot be null'\n      })\n    }\n\n    await new Promise((resolve, reject) => {\n      try {\n        this.serverInstance = this.express.listen(this.options.port, () => {\n          const projectName = require(path.resolve(\n            process.cwd(),\n            './package.json'\n          )).name\n          this.log.info(\n            `${projectName} started on port ${\n              (\n                (\n                  this.serverInstance || ({ address: () => ({}) } as any)\n                ).address() || ({} as any)\n              ).port\n            }`\n          )\n          resolve()\n        })\n      } catch (err) {\n        reject(new Exception({ details: err }))\n      }\n    }).catch(err => Promise.reject(err))\n  }\n\n  public async stop (): Promise<void> {\n    !!this.serverInstance && this.serverInstance.close()\n  }\n\n  protected logFormatter (\n    tokens: any,\n    req: express.Request,\n    res: express.Response\n  ): string {\n    if (!tokens) throw new Exception({ message: 'tokens param required' })\n    if (!tokens.method) {\n      throw new Exception({ message: 'token.method is not a function' })\n    }\n    if (!tokens.url) {\n      throw new Exception({ message: 'token.url is not a function' })\n    }\n    if (!tokens.status) {\n      throw new Exception({ message: 'token.status is not a function' })\n    }\n    if (!tokens.res) {\n      throw new Exception({ message: 'token.res is not a function' })\n    }\n    if (!tokens['response-time']) {\n      throw new Exception({\n        message: 'token.response-time is not a function'\n      })\n    }\n    return JSON.stringify({\n      type: 'request',\n      method: tokens.method(req, res),\n      url: tokens.url(req, res),\n      status: tokens.status(req, res),\n      contentLength: tokens.res(req, res, 'content-length'),\n      responseTime: (tokens['response-time'](req, res) || '-- ') + 'ms'\n    })\n  }\n\n  public async errorHandler (router: express.Router): Promise<void> {\n    if (!router) throw new Exception({ message: 'router param required' })\n\n    router.use(\n      (\n        err: any,\n        req: express.Request,\n        res: express.Response,\n        next: express.NextFunction\n      ) => {\n        if (req.xhr) res.status(500).send({ error: err })\n        else next(err)\n      }\n    )\n\n    // catch 404 and forward to error handler\n    router.use(\n      (\n        req: express.Request,\n        res: express.Response,\n        next: express.NextFunction\n      ) => {\n        const err: any = new Error(`Not Found : ${req.url}`)\n        err.status = 404\n        next(err)\n      }\n    )\n\n    // development error handler\n    // will print stacktrace\n    if (\n      this.options.environment !== 'production' &&\n      this.options.environment !== 'stage'\n    ) {\n      router.use((err: any, req: express.Request, res: express.Response) => {\n        this.log.debug(err)\n        res.status(err.status || 500)\n        res.render('error', {\n          message: err.message,\n          error: err,\n          title: 'Error'\n        })\n      })\n    }\n\n    // production error handler\n    // no stacktraces leaked to user\n    router.use((err: any, req: express.Request, res: express.Response) => {\n      if (err.status === 404) {\n        res.status(404)\n        return res.render('404')\n      }\n      res.status(500)\n      res.render('500')\n    })\n  }\n\n  public async initialLocals (\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction\n  ): Promise<void> {\n    if (!res) return void (!!next && next())\n    if (!res.locals) res.locals = {}\n    if (req && req.headers) {\n      res.locals.url = req.protocol + '://' + req.headers.host + req.url\n    }\n    res.locals.env = this.options.environment\n    next()\n  }\n\n  public async authentication (): Promise<void> {\n    // does nothing\n  }\n}\n"]}